@{
    ViewBag.Title = "Contact me";
}

<div id="slider">
    <form action="#/submit/" method="post" class="contact frames" data-bind="submit: submit">
        <div class="current frame" id="compose" data-bind="with: composeViewModel">
            <section>
                <header>
                    <h1>
                        Contact me
                    </h1>
                </header>
                <p>
                    Use the form below to send me an email.
                </p>
                <div class="field">
                    <input id="from" type="email" placeholder="From (your email)" data-bind="value: email, validationElement: email" required />
                    <div class="error-message" data-bind="validationMessage: email" style="display: none;">
                    </div>
                </div>
                <div class="field">
                    <input id="subject" type="text" placeholder="Subject (optional)" data-bind="value: subject" />
                    <div class="error-message" data-bind="validationMessage: subject" style="display: none;">
                    </div>
                </div>
                <div class="message field">
                    <textarea id="message" rows="1" placeholder="Message (what do you want)" data-bind="value: message, valueUpdate: 'afterkeydown'"
                        data-autosize="true"
                        data-autosize-mirror="autosize-message"></textarea>
                    <div id="message_chars" data-bind="css: { invalid: messageCharsOverflowed }">
                        <div data-bind="visible: !messageCharsOverflowed()">
                            <span data-bind="text: messageCharsRemaining">1000</span> <span data-bind="text: messageCharactersPluralizer">characters</span> left
                        </div>
                        <div data-bind="visible: messageCharsOverflowed" style="display: none;">
                            You need to remove <span data-bind="text: messageCharsRemaining() * -1"></span>
                            <span data-bind="text: messageCharactersPluralizer">characters</span>
                        </div>
                    </div>
                    <div class="error-message" data-bind="validationMessage: message" style="display: none;">
                    </div>
                </div>
                <footer>
                    @{
                        var cancelUrl = Request.UrlReferrer != null && Request.Url != null &&
                                        Request.UrlReferrer.AbsolutePath != Request.Url.AbsolutePath
                                            ? Request.UrlReferrer.ToString() : "/";
                    }
                    @*<a class="blue progress button" href="#/preview/">Preview &amp; Send</a>*@
                    <input class="blue" type="submit" value="Preview & Send" data-bind="enable: !$parent.isSent() && !$parent.isSending()" />
                    <a class="regress button" href="@cancelUrl">Cancel</a>
                </footer>
            </section>
        </div>
        <div class="frame" id="preview" data-bind="with: previewViewModel">
            <section>
                <header>
                    <h1>
                        This is what you haven't sent me yet.
                    </h1>
                </header>
                <p>
                    Read it over first. Spelling counts.
                </p>
                <p class="field">
                    <label>From</label>
                    <span class="input"><a data-bind="text: email, attr: { href: 'mailto:' + email() }"></a></span>
                </p>
                <p class="field">
                    <label>Subject</label>
                    <span class="input"><span data-bind="text: subject() || '[none]'"></span></span>
                </p>
                <p class="field">
                    <label>Message</label>
                    <span class="input"><span data-bind="text: message"></span></span>
                </p>
                <div class="recaptcha field">
                    <label>Proof of humanity</label>
                    <div class="input">

                        <div id="recaptcha_container" data-bind="element: 'recaptchaBox'"></div>

                        <div class="validation">
                            <span class="error-message" data-bind="validationMessage: recaptchaResponse" style="display: none;"></span>
                            <span class="spinner-message" data-bind="visible: isValidating">
                                <img src="~/images/spinner.gif" alt="wait icon" />
                                Validating your humanity...</span>
                            <span class="spinner-message" data-bind="visible: $parent.isSending">
                                <img src="~/images/spinner.gif" alt="wait icon" />
                                Sending your message...</span>
                        </div>

                    </div>
                </div>
                <footer>
                    @*<a class="blue progress button" data-bind="click: send">Send now</a>*@
                    <input type="submit" value="Send now" class="blue" data-bind="enable: !$parent.isSent() && !$parent.isSending()" />
                    <a class="regress button" href="#/compose/" data-bind="click: compose">Go back and edit</a>
                </footer>
            </section>
        </div>
        <div class="frame" id="sent">
            <section>
                <header>
                    <h1>
                        Your input will be taken under advisement
                    </h1>
                </header>
                <p>
                    Maybe I'll reply, maybe I won't. Wager accordingly.
                </p>
                <footer>
                    <p>
                        If you want to be annoying, <a href="@Url.Action(MVC.Contact.Index())/">send me another email right now</a>.
                    </p>
                </footer>
            </section>
        </div>
    </form>
</div>
@section head
{

    <script type="text/javascript" src="http://www.google.com/recaptcha/api/js/recaptcha_ajax.js"></script>

}
@section scripts
{

    <script type="text/javascript" src="~/Models/Contact.js"></script>

    <script type="text/javascript">

        var contactViewModel = new ContactViewModel();
        ko.applyBindingsWithValidation(
            contactViewModel,
            $('#main > .content')[0],
            {
                decorateElement: true,
                insertMessages: false,
                errorElementClass: 'error-field',
                errorMessageClass: 'error-message',
                parseInputAttributes: true
            });

        Recaptcha.create('@System.Configuration.ConfigurationManager.AppSettings["RecaptchaPublicKey"]',
            'recaptcha_container',
            {
                theme: 'clean',
                callback: function () {
                    // disable tabbing after recaptcha is created
                    contactViewModel.disableCards();
                }
            });

    </script>

}
